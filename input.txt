// Draw vertical line
var count 		= 8192;
var screenPtr 	= 16384;
while(count){
	*screenPtr = 1;
	count--;
	screenPtr++;
}

// Draw horizontal line
var countY = 16;
var countX = 0;
screenPtr = 16384;
while(countY){
	countX = 32;
	while(countX){
		*screenPtr = -1;
		screenPtr = screenPtr+1;
		countX--;
	}
	screenPtr=screenPtr+480;
	countY--;
}

// Do main task!
var keyboardPtr = 24576;
var key;
var cursorX = 16;
var cursorY = 8;

var l_0_0 = 65535;
var l_0_1 = 1;
var l_0_2 = 113;
var l_0_3 = 249;
var l_0_4 = 249;
var l_0_5 = 249;
var l_0_6 = 113;
var l_0_7 = 33;
var l_0_8 = 65;
var l_0_9 = 129;
var l_0_10 = 321;
var l_0_11 = 321;
var l_0_12 = 321;
var l_0_13 = 577;
var l_0_14 = 577;
var l_0_15 = 1633;
var l_1_0 = 65535;
var l_1_1 = 225;
var l_1_2 = 497;
var l_1_3 = 497;
var l_1_4 = 497;
var l_1_5 = 225;
var l_1_6 = 65;
var l_1_7 = 65;
var l_1_8 = 129;
var l_1_9 = 129;
var l_1_10 = 321;
var l_1_11 = 321;
var l_1_12 = 321;
var l_1_13 = 577;
var l_1_14 = 577;
var l_1_15 = 1633;
var l_2_0 = 65535;
var l_2_1 = 449;
var l_2_2 = 993;
var l_2_3 = 993;
var l_2_4 = 993;
var l_2_5 = 449;
var l_2_6 = 129;
var l_2_7 = 129;
var l_2_8 = 129;
var l_2_9 = 129;
var l_2_10 = 321;
var l_2_11 = 321;
var l_2_12 = 321;
var l_2_13 = 577;
var l_2_14 = 577;
var l_2_15 = 1633;
var l_3_0 = 65535;
var l_3_1 = 1793;
var l_3_2 = 3969;
var l_3_3 = 3969;
var l_3_4 = 3969;
var l_3_5 = 1793;
var l_3_6 = 513;
var l_3_7 = 513;
var l_3_8 = 257;
var l_3_9 = 257;
var l_3_10 = 641;
var l_3_11 = 641;
var l_3_12 = 641;
var l_3_13 = 577;
var l_3_14 = 577;
var l_3_15 = 1633;
var l_4_0 = 65535;
var l_4_1 = 1;
var l_4_2 = 3585;
var l_4_3 = 7937;
var l_4_4 = 7937;
var l_4_5 = 7937;
var l_4_6 = 3585;
var l_4_7 = 1025;
var l_4_8 = 513;
var l_4_9 = 257;
var l_4_10 = 641;
var l_4_11 = 641;
var l_4_12 = 641;
var l_4_13 = 577;
var l_4_14 = 577;
var l_4_15 = 1633;
var l_5_0 = 65535;
var l_5_1 = 1793;
var l_5_2 = 3969;
var l_5_3 = 3969;
var l_5_4 = 3969;
var l_5_5 = 1793;
var l_5_6 = 513;
var l_5_7 = 513;
var l_5_8 = 257;
var l_5_9 = 257;
var l_5_10 = 641;
var l_5_11 = 641;
var l_5_12 = 641;
var l_5_13 = 577;
var l_5_14 = 577;
var l_5_15 = 1633;
var l_6_0 = 65535;
var l_6_1 = 449;
var l_6_2 = 993;
var l_6_3 = 993;
var l_6_4 = 993;
var l_6_5 = 449;
var l_6_6 = 129;
var l_6_7 = 129;
var l_6_8 = 129;
var l_6_9 = 129;
var l_6_10 = 321;
var l_6_11 = 321;
var l_6_12 = 321;
var l_6_13 = 577;
var l_6_14 = 577;
var l_6_15 = 1633;
var l_7_0 = 65535;
var l_7_1 = 225;
var l_7_2 = 497;
var l_7_3 = 497;
var l_7_4 = 497;
var l_7_5 = 225;
var l_7_6 = 65;
var l_7_7 = 65;
var l_7_8 = 129;
var l_7_9 = 129;
var l_7_10 = 321;
var l_7_11 = 321;
var l_7_12 = 321;
var l_7_13 = 577;
var l_7_14 = 577;
var l_7_15 = 1633;


var frame = 0;

function drawCursor(){
	// screenPtr은 첫 번째 셀의 두 번째 row를 가리킨다.
	screenPtr = 16384;
	
	// X-move
	count = cursorX;
	while(count){
		screenPtr++;
		count--;
	}
	
	// Y-move
	count = cursorY;
	while(count){
		screenPtr=screenPtr+512;
		count--;
	}

var cp = screenPtr;
if((0<=frame)&(frame<125)){
*cp = l_0_0;
cp = cp + 32;
*cp = l_0_1;
cp = cp + 32;
*cp = l_0_2;
cp = cp + 32;
*cp = l_0_3;
cp = cp + 32;
*cp = l_0_4;
cp = cp + 32;
*cp = l_0_5;
cp = cp + 32;
*cp = l_0_6;
cp = cp + 32;
*cp = l_0_7;
cp = cp + 32;
*cp = l_0_8;
cp = cp + 32;
*cp = l_0_9;
cp = cp + 32;
*cp = l_0_10;
cp = cp + 32;
*cp = l_0_11;
cp = cp + 32;
*cp = l_0_12;
cp = cp + 32;
*cp = l_0_13;
cp = cp + 32;
*cp = l_0_14;
cp = cp + 32;
*cp = l_0_15;
cp = cp + 32;
}
if((125<=frame)&(frame<250)){
*cp = l_1_0;
cp = cp + 32;
*cp = l_1_1;
cp = cp + 32;
*cp = l_1_2;
cp = cp + 32;
*cp = l_1_3;
cp = cp + 32;
*cp = l_1_4;
cp = cp + 32;
*cp = l_1_5;
cp = cp + 32;
*cp = l_1_6;
cp = cp + 32;
*cp = l_1_7;
cp = cp + 32;
*cp = l_1_8;
cp = cp + 32;
*cp = l_1_9;
cp = cp + 32;
*cp = l_1_10;
cp = cp + 32;
*cp = l_1_11;
cp = cp + 32;
*cp = l_1_12;
cp = cp + 32;
*cp = l_1_13;
cp = cp + 32;
*cp = l_1_14;
cp = cp + 32;
*cp = l_1_15;
cp = cp + 32;
}
if((250<=frame)&(frame<375)){
*cp = l_2_0;
cp = cp + 32;
*cp = l_2_1;
cp = cp + 32;
*cp = l_2_2;
cp = cp + 32;
*cp = l_2_3;
cp = cp + 32;
*cp = l_2_4;
cp = cp + 32;
*cp = l_2_5;
cp = cp + 32;
*cp = l_2_6;
cp = cp + 32;
*cp = l_2_7;
cp = cp + 32;
*cp = l_2_8;
cp = cp + 32;
*cp = l_2_9;
cp = cp + 32;
*cp = l_2_10;
cp = cp + 32;
*cp = l_2_11;
cp = cp + 32;
*cp = l_2_12;
cp = cp + 32;
*cp = l_2_13;
cp = cp + 32;
*cp = l_2_14;
cp = cp + 32;
*cp = l_2_15;
cp = cp + 32;
}
if((375<=frame)&(frame<500)){
*cp = l_3_0;
cp = cp + 32;
*cp = l_3_1;
cp = cp + 32;
*cp = l_3_2;
cp = cp + 32;
*cp = l_3_3;
cp = cp + 32;
*cp = l_3_4;
cp = cp + 32;
*cp = l_3_5;
cp = cp + 32;
*cp = l_3_6;
cp = cp + 32;
*cp = l_3_7;
cp = cp + 32;
*cp = l_3_8;
cp = cp + 32;
*cp = l_3_9;
cp = cp + 32;
*cp = l_3_10;
cp = cp + 32;
*cp = l_3_11;
cp = cp + 32;
*cp = l_3_12;
cp = cp + 32;
*cp = l_3_13;
cp = cp + 32;
*cp = l_3_14;
cp = cp + 32;
*cp = l_3_15;
cp = cp + 32;
}
if((500<=frame)&(frame<625)){
*cp = l_4_0;
cp = cp + 32;
*cp = l_4_1;
cp = cp + 32;
*cp = l_4_2;
cp = cp + 32;
*cp = l_4_3;
cp = cp + 32;
*cp = l_4_4;
cp = cp + 32;
*cp = l_4_5;
cp = cp + 32;
*cp = l_4_6;
cp = cp + 32;
*cp = l_4_7;
cp = cp + 32;
*cp = l_4_8;
cp = cp + 32;
*cp = l_4_9;
cp = cp + 32;
*cp = l_4_10;
cp = cp + 32;
*cp = l_4_11;
cp = cp + 32;
*cp = l_4_12;
cp = cp + 32;
*cp = l_4_13;
cp = cp + 32;
*cp = l_4_14;
cp = cp + 32;
*cp = l_4_15;
cp = cp + 32;
}
if((625<=frame)&(frame<750)){
*cp = l_5_0;
cp = cp + 32;
*cp = l_5_1;
cp = cp + 32;
*cp = l_5_2;
cp = cp + 32;
*cp = l_5_3;
cp = cp + 32;
*cp = l_5_4;
cp = cp + 32;
*cp = l_5_5;
cp = cp + 32;
*cp = l_5_6;
cp = cp + 32;
*cp = l_5_7;
cp = cp + 32;
*cp = l_5_8;
cp = cp + 32;
*cp = l_5_9;
cp = cp + 32;
*cp = l_5_10;
cp = cp + 32;
*cp = l_5_11;
cp = cp + 32;
*cp = l_5_12;
cp = cp + 32;
*cp = l_5_13;
cp = cp + 32;
*cp = l_5_14;
cp = cp + 32;
*cp = l_5_15;
cp = cp + 32;
}
if((750<=frame)&(frame<875)){
*cp = l_6_0;
cp = cp + 32;
*cp = l_6_1;
cp = cp + 32;
*cp = l_6_2;
cp = cp + 32;
*cp = l_6_3;
cp = cp + 32;
*cp = l_6_4;
cp = cp + 32;
*cp = l_6_5;
cp = cp + 32;
*cp = l_6_6;
cp = cp + 32;
*cp = l_6_7;
cp = cp + 32;
*cp = l_6_8;
cp = cp + 32;
*cp = l_6_9;
cp = cp + 32;
*cp = l_6_10;
cp = cp + 32;
*cp = l_6_11;
cp = cp + 32;
*cp = l_6_12;
cp = cp + 32;
*cp = l_6_13;
cp = cp + 32;
*cp = l_6_14;
cp = cp + 32;
*cp = l_6_15;
cp = cp + 32;
}
if((875<=frame)&(frame<1000)){
*cp = l_7_0;
cp = cp + 32;
*cp = l_7_1;
cp = cp + 32;
*cp = l_7_2;
cp = cp + 32;
*cp = l_7_3;
cp = cp + 32;
*cp = l_7_4;
cp = cp + 32;
*cp = l_7_5;
cp = cp + 32;
*cp = l_7_6;
cp = cp + 32;
*cp = l_7_7;
cp = cp + 32;
*cp = l_7_8;
cp = cp + 32;
*cp = l_7_9;
cp = cp + 32;
*cp = l_7_10;
cp = cp + 32;
*cp = l_7_11;
cp = cp + 32;
*cp = l_7_12;
cp = cp + 32;
*cp = l_7_13;
cp = cp + 32;
*cp = l_7_14;
cp = cp + 32;
*cp = l_7_15;
cp = cp + 32;
}
frame++;
if(frame==1000)frame=0;


}

function fill(){
	screenPtr = 16384+32;
	
	// X-move
	count = cursorX;
	while(count){
		screenPtr++;
		count--;
	}
	
	// Y-move
	count = cursorY;
	while(count){
		screenPtr=screenPtr+512;
		count--;
	}
	
	count = 15;
	while(count){
		*screenPtr = -1;
		screenPtr = screenPtr + 32;	
		count--;
	}	
}

drawCursor();

while(1){
	var loop = 200;
	key = *keyboardPtr;
	if(key==130){
		// Left
		fill();
		if(cursorX>0) {cursorX--;}
		while(loop){
			drawCursor();
			loop--;
		}	
		continue;
	}
	if(key==131){	
		// Up
		fill();
		if(cursorY>0) {cursorY--;}
		while(loop){
			drawCursor();
			loop--;
		}	
		continue;
	}
	if(key==132){	
		// Right
		fill();
		if(cursorX<31) {cursorX++;}
		while(loop){
			drawCursor();
			loop--;
		}	
		continue;
	}
	if(key==133){	
		// Down
		fill();
		if(cursorY<15) {cursorY++;}
		while(loop){
			drawCursor();
			loop--;
		}	
		continue;
	}
	drawCursor();
}
